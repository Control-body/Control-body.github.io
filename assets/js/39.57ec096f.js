(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{439:function(t,a,n){"use strict";n.r(a);var s=n(56),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_1、profile功能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、profile功能"}},[t._v("#")]),t._v(" 1、Profile功能")]),t._v(" "),n("p",[t._v("为了方便多环境适配，springboot简化了profile功能。")]),t._v(" "),n("h2",{attrs:{id:"_1、application-profile功能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、application-profile功能"}},[t._v("#")]),t._v(" 1、application-profile功能")]),t._v(" "),n("ul",[n("li",[t._v("默认配置文件  application.yaml；任何时候都会加载")]),t._v(" "),n("li",[t._v("指定环境配置文件  application-{env}.yaml")]),t._v(" "),n("li",[t._v("激活指定环境\n配置文件激活\n命令行激活 ：java -jar xxx.jar --spring.profiles.active=prod  --person.name=haha  可以改配置文件中的任何信息；\n"),n("ul",[n("li",[t._v("修改配置文件的任意值，命令行优先")])])]),t._v(" "),n("li",[t._v("默认配置与环境配置同时生效")]),t._v(" "),n("li",[t._v("同名配置项，profile配置优先\n指定激活环境，默认配置文件和指定环境的配置文件都会生效；")])]),t._v(" "),n("h2",{attrs:{id:"_2、-profile条件装配功能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、-profile条件装配功能"}},[t._v("#")]),t._v(" 2、@Profile条件装配功能")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxyBeanMethods "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Profile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"production"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProductionConfiguration")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Myconfig")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Profile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prod"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//prod测试环境的")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Color")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("red")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Profile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//test测试环境的")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Color")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("green")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br")])]),n("h2",{attrs:{id:"_2、外部化配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、外部化配置"}},[t._v("#")]),t._v(" 2、外部化配置")]),t._v(" "),n("h3",{attrs:{id:"_1、外部配置源"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、外部配置源"}},[t._v("#")]),t._v(" 1、外部配置源")]),t._v(" "),n("p",[t._v("常用：Java属性文件、YAML文件、环境变量、命令行参数；")]),t._v(" "),n("h3",{attrs:{id:"_2、配置文件查找位置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、配置文件查找位置"}},[t._v("#")]),t._v(" 2、配置文件查找位置")]),t._v(" "),n("p",[t._v("都是Applicaton.properties\n(1) classpath 根路径  java 和 resource 都是类路径下\n"),n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Control-body/tuChuang/2022/03/image-be0160d5774446b2bee0e04cb63b3be7.png",alt:"image.png"}}),t._v("\n(2) classpath 根路径下config目录\n"),n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Control-body/tuChuang/2022/03/image-9c40f006ad184906a3f690460e944547.png",alt:"image.png"}}),t._v("\n(3) jar包当前目录\n(4) jar包当前目录的config目录\n(5) /config子目录的直接子目录 （只有在linux下面才会生效）")]),t._v(" "),n("h3",{attrs:{id:"_3、配置文件加载顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、配置文件加载顺序"}},[t._v("#")]),t._v(" 3、配置文件加载顺序：")]),t._v(" "),n("ol",[n("li",[t._v("当前jar包内部的application.properties和application.yml")]),t._v(" "),n("li",[t._v("当前jar包内部的application-{profile}.properties 和 application-{profile}.yml")]),t._v(" "),n("li",[t._v("引用的外部jar包的application.properties和application.yml")]),t._v(" "),n("li",[t._v("引用的外部jar包的application-{profile}.properties 和 application-{profile}.yml")])]),t._v(" "),n("h3",{attrs:{id:"_4、指定环境优先-外部优先-后面的可以覆盖前面的同名配置项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、指定环境优先-外部优先-后面的可以覆盖前面的同名配置项"}},[t._v("#")]),t._v(" 4、指定环境优先，外部优先，后面的可以覆盖前面的同名配置项")]),t._v(" "),n("h2",{attrs:{id:"_3、自定义starter"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、自定义starter"}},[t._v("#")]),t._v(" 3、自定义starter")]),t._v(" "),n("h3",{attrs:{id:"_1、starter启动原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、starter启动原理"}},[t._v("#")]),t._v(" 1、starter启动原理")]),t._v(" "),n("ul",[n("li",[t._v("starter-pom引入 autoconfigurer 包\n"),n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Control-body/tuChuang/2022/03/image-d8b7a5c02ca94ca9bf80bc192a92eb71.png",alt:"image.png"}})])]),t._v(" "),n("p",[t._v("1.创建两个model\nstart是一个maven项目 没有任何源码\n"),n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Control-body/tuChuang/2022/03/image-990c902d4fd7476684951cd82f6db37c.png",alt:"image.png"}}),t._v("\nautoconfig是用SpringBoot的初始化向导做的 删除多余的，只留下spring-boot-starter\n"),n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Control-body/tuChuang/2022/03/image-27851c0da2d74932bf1a2bc383031c0f.png",alt:"image.png"}}),t._v("\n2.创建一个SpringBoot的项目（带WEB）\n"),n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Control-body/tuChuang/2022/03/image-e9c8aeebf6f74e17b0d4ab91862ebcd9.png",alt:"image.png"}}),t._v("\n3.引入我们的START\n"),n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Control-body/tuChuang/2022/03/image-eb98c70e07c647c3b206d6e41fd69836.png",alt:"image.png"}}),t._v("\n4.流程：\n导入start---》会导入xxxapplicationautoconfigration---》自动导入一些bean---》bean和Properties绑定")]),t._v(" "),n("h2",{attrs:{id:"_4、springboot原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、springboot原理"}},[t._v("#")]),t._v(" 4、SpringBoot原理")]),t._v(" "),n("p",[t._v("Spring原理【Spring注解】、SpringMVC原理、自动配置原理、SpringBoot原理")]),t._v(" "),n("h2",{attrs:{id:"_1、springboot启动过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、springboot启动过程"}},[t._v("#")]),t._v(" 1、SpringBoot启动过程")]),t._v(" "),n("h3",{attrs:{id:"_1-1-创建-springapplication-组件的创建-把需要的组件读取进来"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-创建-springapplication-组件的创建-把需要的组件读取进来"}},[t._v("#")]),t._v(" 1.1 创建 SpringApplication （组件的创建，把需要的组件读取进来）")]),t._v(" "),n("p",[t._v("保存一些信息。\n判定当前应用的类型。ClassUtilsServlet")]),t._v(" "),n("h4",{attrs:{id:"bootstrappers-初始启动引导器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bootstrappers-初始启动引导器"}},[t._v("#")]),t._v(" bootstrappers：初始启动引导器")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("（"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bootstrapper")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("）：去"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("spring"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("factories"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("文件中找 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Bootstrapper")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("h4",{attrs:{id:"找-applicationcontextinitializer-去spring-factories找-applicationcontextinitializer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#找-applicationcontextinitializer-去spring-factories找-applicationcontextinitializer"}},[t._v("#")]),t._v(" 找 ApplicationContextInitializer；去"),n("strong",[t._v("spring.factories")]),t._v("找 ApplicationContextInitializer")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContextInitializer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initializers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("初始化启动器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("h4",{attrs:{id:"找-applicationlistener-应用监听器。去spring-factories找-applicationlistener"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#找-applicationlistener-应用监听器。去spring-factories找-applicationlistener"}},[t._v("#")]),t._v(" 找 ApplicationListener  ；应用监听器。去"),n("strong",[t._v("spring.factories")]),t._v("找 ApplicationListener")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" listeners\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("h3",{attrs:{id:"_1-2-运行-springapplication"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-运行-springapplication"}},[t._v("#")]),t._v(" 1.2 运行 SpringApplication")]),t._v(" "),n("ol",[n("li",[t._v("StopWatch")]),t._v(" "),n("li",[t._v("记录应用的启动时间")]),t._v(" "),n("li",[t._v("创建引导上下文（Context环境）createBootstrapContext()\n3.1 获取到所有之前的 bootstrappers（初始启动引导器） 挨个执行 intitialize() 来完成对引导启动器上下文环境设置\n3.2 让当前应用进入headless模式。java.awt.headless（自力更生模式）")]),t._v(" "),n("li",[t._v("获取所有 RunListener（运行监听器）【为了方便所有Listener进行事件感知】\n4.1 getSpringFactoriesInstances 去spring.factories找 SpringApplicationRunListener. 保存到RunListener，\n4.2 遍历 SpringApplicationRunListener 调用 starting 方法；\n4.3 相当于通知所有感兴趣系统正在启动过程的人，项目正在 starting。")]),t._v(" "),n("li",[t._v("保存命令行参数；ApplicationArguments")]),t._v(" "),n("li",[t._v("准备环境 prepareEnvironment（）;\n6.1 返回或者创建基础环境信息对象。StandardServletEnvironment\n6.2 配置环境信息对象。\n6.2.1 读取所有的配置源的配置属性值。\n6.3 绑定环境信息\n6.4 监听器调用 listener.environmentPrepared()；通知所有的监听器当前环境准备完成")]),t._v(" "),n("li",[t._v("创建IOC容器（createApplicationContext（））\n7.1 根据项目类型（Servlet）创建容器，\n7.2 当前会创建 AnnotationConfigServletWebServerApplicationContext")]),t._v(" "),n("li",[t._v("准备ApplicationContext IOC容器的基本信息   prepareContext()\n8.1 保存环境信息\n8.2 IOC容器的后置处理流程。\n8.3 应用初始化器；applyInitializers；\n8.3.1 遍历所有的 ApplicationContextInitializer 。调用 initialize.。来对ioc容器进行初始化扩展功能\n8.3.2  遍历所有的 listener 调用 contextPrepared。EventPublishRunListenr；通知所有的监听器contextPrepared准备好了（事件发布的监听器）\n8.4 所有的监听器 调用 contextLoaded。通知所有的监听器 contextLoaded；（通知监听器准备工作好了）")]),t._v(" "),n("li",[t._v("刷新IOC容器。refreshContext\n9.1 创建容器中的所有组件（Spring注解）")]),t._v(" "),n("li",[t._v("容器刷新完成后工作？afterRefresh")]),t._v(" "),n("li",[t._v("所有监听器调用 listeners.started(context); 通知所有的监听器 started（准备好了）")]),t._v(" "),n("li",[t._v("调用所有runners；callRunners()\n12.1 获取容器中的 ApplicationRunner\n12.2 获取容器中的  CommandLineRunner\n12.3 合并所有runner并且按照@Order进行排序\n12.4 遍历所有的runner。调用 run 方法")]),t._v(" "),n("li",[t._v("如果以上有异常，\n13.1 调用Listener 的 failed")]),t._v(" "),n("li",[t._v("调用所有监听器的 running 方法  listeners.running(context); 通知所有的监听器 running")]),t._v(" "),n("li",[t._v("running如果有问题。继续通知 failed 。调用所有 Listener 的 failed；通知所有的监听器 failed；")]),t._v(" "),n("li",[t._v("返回IOC容器；")])]),t._v(" "),n("h2",{attrs:{id:"_2-自定义底层组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-自定义底层组件"}},[t._v("#")]),t._v(" 2.自定义底层组件")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Control-body/tuChuang/2022/03/image-91e7f09acc094ff3ba8accb8d358734a.png",alt:"image.png"}}),t._v(" "),n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Control-body/tuChuang/2022/03/image-1a27b3fe5702435c974198d7f92effce.png",alt:"image.png"}}),t._v("\n黄色的都是可以自定义的，有些是在spring.factories读要建立文件，Spring容器读取的要加注解；\nspring.factories：\n"),n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Control-body/tuChuang/2022/03/image-65e60b7d9fe9404ea541dfe80760d71f.png",alt:"image.png"}})]),t._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Control-body/tuChuang/2022/03/image-477097976b394892a37be53c77b382d1.png",alt:"image.png"}})]),t._v(" "),n("p",[t._v("Spring容器读取的要加注解")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Control-body/tuChuang/2022/03/image-b580fa53122244d39d8ca3be7360faea.png",alt:"image.png"}})]),t._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Control-body/tuChuang/2022/03/image-55e1ff8033874a21827a0bea39fb0678.png",alt:"image.png"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);